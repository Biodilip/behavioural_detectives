source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.9 ## transmission coefficient when prevalence is 0
, alpha = 8 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
View(SI.ts)
## Introduction to Infectious Disease Dynamics
## Clinic on the Meaningful Modeling of Epidemiological Data
## International Clinics on Infectious Disease Dynamics and Data (ICI3D) Program
## African Institute for Mathematical Sciences, Muizenberg, RSA
##
## Heterogeneity or behaviour modification - Can we tell?
## Sam Abbot, ......
##
library(deSolve)                # Load library to be used for numerical integration
library(data.table)
library(ggplot2)
rm(list=ls())                   # Clear all variables and functions
setwd("C:/Users/corlendo/behavioural_detectives")
source("code/hetero_lambda.r")
source("code/behaviour_mort_effect.r")
source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.1 ## transmission coefficient when prevalence is 0
, alpha = 8 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
## Introduction to Infectious Disease Dynamics
## Clinic on the Meaningful Modeling of Epidemiological Data
## International Clinics on Infectious Disease Dynamics and Data (ICI3D) Program
## African Institute for Mathematical Sciences, Muizenberg, RSA
##
## Heterogeneity or behaviour modification - Can we tell?
## Sam Abbot, ......
##
library(deSolve)                # Load library to be used for numerical integration
library(data.table)
library(ggplot2)
rm(list=ls())                   # Clear all variables and functions
setwd("C:/Users/corlendo/behavioural_detectives")
source("code/hetero_lambda.r")
source("code/behaviour_mort_effect.r")
source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.5 ## transmission coefficient when prevalence is 0
, alpha = 4 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
## Introduction to Infectious Disease Dynamics
## Clinic on the Meaningful Modeling of Epidemiological Data
## International Clinics on Infectious Disease Dynamics and Data (ICI3D) Program
## African Institute for Mathematical Sciences, Muizenberg, RSA
##
## Heterogeneity or behaviour modification - Can we tell?
## Sam Abbot, ......
##
library(deSolve)                # Load library to be used for numerical integration
library(data.table)
library(ggplot2)
rm(list=ls())                   # Clear all variables and functions
setwd("C:/Users/corlendo/behavioural_detectives")
source("code/hetero_lambda.r")
source("code/behaviour_mort_effect.r")
source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.5 ## transmission coefficient when prevalence is 0
, alpha = 8 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
## Introduction to Infectious Disease Dynamics
## Clinic on the Meaningful Modeling of Epidemiological Data
## International Clinics on Infectious Disease Dynamics and Data (ICI3D) Program
## African Institute for Mathematical Sciences, Muizenberg, RSA
##
## Heterogeneity or behaviour modification - Can we tell?
## Sam Abbot, ......
##
library(deSolve)                # Load library to be used for numerical integration
library(data.table)
library(ggplot2)
rm(list=ls())                   # Clear all variables and functions
setwd("C:/Users/corlendo/behavioural_detectives")
source("code/hetero_lambda.r")
source("code/behaviour_mort_effect.r")
source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.5 ## transmission coefficient when prevalence is 0
, alpha = 8 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
## Introduction to Infectious Disease Dynamics
## Clinic on the Meaningful Modeling of Epidemiological Data
## International Clinics on Infectious Disease Dynamics and Data (ICI3D) Program
## African Institute for Mathematical Sciences, Muizenberg, RSA
##
## Heterogeneity or behaviour modification - Can we tell?
## Sam Abbot, ......
##
library(deSolve)                # Load library to be used for numerical integration
library(data.table)
library(ggplot2)
rm(list=ls())                   # Clear all variables and functions
setwd("C:/Users/corlendo/behavioural_detectives")
source("code/hetero_lambda.r")
source("code/behaviour_mort_effect.r")
source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.5 ## transmission coefficient when prevalence is 0
, alpha = 8 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
## Introduction to Infectious Disease Dynamics
## Clinic on the Meaningful Modeling of Epidemiological Data
## International Clinics on Infectious Disease Dynamics and Data (ICI3D) Program
## African Institute for Mathematical Sciences, Muizenberg, RSA
##
## Heterogeneity or behaviour modification - Can we tell?
## Sam Abbot, ......
##
library(deSolve)                # Load library to be used for numerical integration
library(data.table)
library(ggplot2)
rm(list=ls())                   # Clear all variables and functions
setwd("C:/Users/corlendo/behavioural_detectives")
source("code/hetero_lambda.r")
source("code/behaviour_mort_effect.r")
source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.2 ## transmission coefficient when prevalence is 0
, alpha = 8 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
y <- pop.SI0
parms = disease_params()
I_vec <- y[2:(n+1)]
I <-  sum(I_vec)          ## total infected
N <- I + S                 ## total population
lambda <- hetero_lambda(Beta,alpha,I,N)
parms
with(c(as.list(y),parms),{
#N <- sum(y)
I_vec <- y[2:(n+1)]
I <-  sum(I_vec)          ## total infected
N <- I + S                 ## total population
lambda <- hetero_lambda(Beta,alpha,I,N)
deriv <- rep(NA,3+(n)) # number of derivatives
deriv[1] <-	bRt*N - lambda*S - dRt*S  ## Instantaneous rate of change: Susceptibles
deriv[2:(n+1)] <- box_car_infections(S, I_vec,lambda, dRt,pRt)
deriv[(length(deriv)-1)] <-	(lambda)*S ## Instantaneous rate of change: Cumulative incidence
deriv[length(deriv)] <-	pRt*deriv[n+1] ## Instantaneous rate of change: Cumulative mortality
return(list(deriv))
})
## Introduction to Infectious Disease Dynamics
## Clinic on the Meaningful Modeling of Epidemiological Data
## International Clinics on Infectious Disease Dynamics and Data (ICI3D) Program
## African Institute for Mathematical Sciences, Muizenberg, RSA
##
## Heterogeneity or behaviour modification - Can we tell?
## Sam Abbot, ......
##
library(deSolve)                # Load library to be used for numerical integration
library(data.table)
library(ggplot2)
rm(list=ls())                   # Clear all variables and functions
setwd("C:/Users/corlendo/behavioural_detectives")
source("code/hetero_lambda.r")
source("code/behaviour_mort_effect.r")
source("code/both_effects.r")
source("code/box_car_infections.r")
source("code/HIV_SI_ODEs.r")
## Script that explores the effect of heterogeneity or behaviour on model
#1) Define the disease parameters
## Function that makes a list of disease parameters with default values
disease_params <- function(Beta = 0.2 ## transmission coefficient when prevalence is 0
, alpha = 8 ## for transmission coefficient: decline with prevalence
, n = 3 ## number of box  cars
, pRt = (1/10)*n ## rate of of progression through each of the I classes, for 10 years total
, bRt = 1/60 ## birth rate = death rates in a closed popn
, dRt = 1/60 ## 60 year natural life expectancy
, q = 150 # effect of behaviour change on mortality
){
return(as.list(environment()))
}
#Initial conditions
initPrev <- exp(-7) ## infected at start
k = disease_params()$n
I_vec <- rep(0,(k-1))
names(I_vec) <- paste0("I",2:k)
pop.SI0 <- c(S=1-initPrev,
I1=initPrev,
I_vec, CI = 0,
CD = 0)      #Initial conditions
time.out <- seq(0, 365, 1)
## Solve ODE using lsoda and give our output in the data.table
SI.ts <- data.table(lsoda(
y = pop.SI0,               # Initial conditions for population
times = time.out,             # Timepoints for evaluation
func = HIV_SI_ODEs,                   # Function to evaluate
parms = disease_params()               # Vector of parameters
))
SI.ts$I <- rowSums(SI.ts[,3:(k+2)])
SI.ts <- SI.ts[,-3:-(k+2)]
SI.ts$N <- SI.ts[,I] + SI.ts[,S]
SI.ts[, P := CI / N]
#plot output
SI.ts.long <- melt(SI.ts, id.vars = 'time')
(ggplot(SI.ts.long)
+ aes(x = time, y = value, color = variable, linetype = variable)
+ geom_line()
)
(ggplot(SI.ts.long[variable %in% c('S', 'I', "CI","CD","N")])
+ aes(x = time, y = value)
+ geom_line()
+ facet_wrap(~ variable)
)
I_vec
sum(I_vec)
